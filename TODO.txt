**
* NOTE! this doc is severely outdated. Please try to breathe some life
* when possible.
**
General Todo:
* Support File objects (test currently disabled)(use nginx for file uploads)
* Allow more control on content type. For example, I may want to insist
  that a post request comes in as json, or that the default output is something
  other than json (maybe). For example, I always forget to add the Content-Type
  header when testing posts, and instead of indicating that, it says I am
  missing a particular variable. Would be more helpful to tell me i need json,
  or assume it is and try to decode.
  Perhaps we can allow a list of possible incoming content types per EP.
* Support and test the fallback app

(Tests):
* More of all tests
* Cookie tests
* Renderer tests
* Validator tests
* Generator tests
* (this should be complete)Tests for every possible exception flow in publisher
* Unicode unicode unicode... in every input and output
* Running with Tornado
* Fallback app tests.

Service Publisher:
* We should consider passing encoded json strings as unicode strings always.
* Tornado native support: Most tornado users do NOT use tornado's wsgi module,
  and we really need to support normal tornado requests. I think we already do,
  but we should test this.
* Look into the possibility of the fallback app:

Renderers:
* Possible bug: if our endpoint function returns a list like
  return thing1, thing2
  im not sure this would be properly passed to the renderer

Endpoints:
* (This is currently done, but might be too strict)
  The error_codes should really only be valid error codes, but im not
  sure we want to be so tightly bound to HTTP in this way. On the other
  hand, we want to avoid crashing our web server.
* Print out which end point failed on failure

Args:
* The args checking in the endpoints might need more work?
* Sanity checks for things like min, max in the arg class
* List sanity min and max checks must be 0 <= inf. Same with dict
* Add the list and dict types
* I feel like the optional shouldn't be a part of the args spec. We should look
  to see if this arg exists, and if not, do nothing, otherwise use all the
  validators
* Go through the optional handling for each type. It looks like string and
  others do the wrong thing when optional.
* Check client IP against a couple diff servers like nginx and haproxy. Also
  make sure it get the very first x-forwarded-for
* We should remove anything json from args. Args will be found in the jsonbody
  if the content type is successfully set
* _get_json_body - Shouldnt this be in json.py?

Json:
* We should either:
** Make a pip requirements files for nudge which has simplejson or
** Make json optional, and in that case default to html or something (I dont
   like this idea).

Types: Is the preferred way to type check with types.XXX ?

Gen:
* Docs
* Javascript
* Maybe even simple jinja2 html forms.

Maybe someday...
* Test nudge to work with actual unicode strings for endpoint titles this might
  be fun and useful for docs generation etc.
